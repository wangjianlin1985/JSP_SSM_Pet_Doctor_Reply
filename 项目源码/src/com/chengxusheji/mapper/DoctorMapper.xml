<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace命名空间，为了对sql语句进行隔离，方便管理，mapper开发dao方式，使用namespace有特殊作用  
mapper代理开发时将namespace指定为mapper接口的全限定名  
 -->
<mapper namespace="com.chengxusheji.mapper.DoctorMapper"> 
<!--在mapper.xml文件中配置很多的sql语句，执行每个sql语句时，封装为MappedStatement对象 
mapper.xml以statement为单位管理sql语句  
 -->
	<!-- 添加医生记录 -->
	<insert id="addDoctor" parameterType="doctor">
		insert into t_doctor(doctorNo,password,name,gender,birthDate,doctorPhoto,zc,telephone,workYear,doctorDesc,regTime) values 
		(#{doctorNo},#{password},#{name},#{gender},#{birthDate},#{doctorPhoto},#{zc},#{telephone},#{workYear},#{doctorDesc},#{regTime})
	</insert>

	<!-- 按照查询条件分页查询医生记录 -->
	<select id="queryDoctor" resultMap="doctorMap" >
		select t_doctor.* from t_doctor ${where} limit #{startIndex},#{pageSize}
	</select>
	<resultMap id="doctorMap" type="doctor">
        <id property="doctorNo" column="doctorNo" />
    </resultMap>

    <!-- 按照查询条件查询所有医生记录 -->
	<select id="queryDoctorList" resultMap="doctorMap" >
		select t_doctor.* from t_doctor ${where}
	</select>

    <!-- 按照查询条件的医生记录数 -->
	<select id="queryDoctorCount" resultType="int">
		select count(*) from t_doctor ${where}
	</select>

	<!-- 根据主键查询某个医生记录 -->
	<select id="getDoctor" parameterType="string" resultMap="doctorMap">
		select * from t_doctor where t_doctor.doctorNo = #{doctorNo}
	</select>

	<!-- 更新医生记录 -->
	<update id="updateDoctor" parameterType="doctor">
		update t_doctor set password=#{password},name=#{name},gender=#{gender},birthDate=#{birthDate},doctorPhoto=#{doctorPhoto},zc=#{zc},telephone=#{telephone},workYear=#{workYear},doctorDesc=#{doctorDesc},regTime=#{regTime} where doctorNo = #{doctorNo}
	</update>

	<!-- 删除医生记录 -->
	<delete id="deleteDoctor" parameterType="string">
		delete from t_doctor where doctorNo=#{doctorNo}
	</delete>

</mapper>
